# SPRING CONFIG
server.port=8081
urlempresa=http://localhost:8090/api/v0
spring.application.name=BackWeb

# H2-DATABASE-CONFI
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:file:~/virtualtravel
spring.datasource.driver-class-name=org.h2.Driver
#hibernate.dialect=org.dialect.HSQLDialect
spring.jpa.show-sql=true
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.username=pedro
spring.datasource.password=prueba

# SPRING-SECURITY
spring.security.user.name=admin
spring.security.user.password=admin

# KAFKA
spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.consumer.group-id=virtualtravel${random.value}

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

topic=viaje
group=${server.port}

# EUREKA
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true

# MAIL
virtual.email=
virtual.email.pass=